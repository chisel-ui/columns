---
import { Sizes, sizes, uid } from '@chisel-ui/core'
import Stack, { StackProps } from '@chisel-ui/stack/Stack.astro'

export interface ColumnsProps extends StackProps {
	columns?: number
	dense?: boolean
	switchAt?: number | string | keyof Sizes
}

function getBreakpoint(switchAt?: number | string | keyof Sizes) {
	if (!switchAt) {
		return undefined
	}

	if (switchAt in sizes) {
		return sizes[switchAt]
	}

	if (typeof switchAt === 'number') {
		return `${switchAt}px`
	}

	return switchAt
}

const {
	columns = 1,
	dense = false,
	switchAt,
	...props
} = Astro.props as ColumnsProps
const id = uid()

const maybeColumns = columns || 1
const maybeBreakpoint = getBreakpoint(switchAt)

const inlineStyle =
	maybeBreakpoint &&
	`
    @media (min-width: ${maybeBreakpoint}) {
        #${id} {
            --columns: ${maybeColumns};
        }
    }
`
---

<Stack data-chisel-columns={dense ? 'dense' : ''} {id} {...props}>
	<slot />
</Stack>

<style global>
	[data-chisel-columns] {
		box-sizing: border-box;
		display: grid;
		grid-template-columns: repeat(var(--columns, 1), 1fr);
		gap: var(--gutter, 0px);
		grid-auto-flow: row;
	}

	[data-chisel-columns='dense'] {
		grid-auto-flow: row dense;
	}

	[data-chisel-columns] > * {
		margin: 0;
	}
</style>
